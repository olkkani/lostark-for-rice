spring:
  profiles:
    group:
      local:
        - common
        - security
        - persistence-common
        - persistence-local
        - database-redis-local
        - server-local
      prod:
        - common
        - security
        - persistence-common
        - persistence-prod
        - database-redis-server
        - server-prod
--- # common
spring:
  config:
    activate:
      on-profile: common
  thymeleaf:
    prefix: classpath:templates/
    suffix: .html
management:
  endpoints:
    web:
      exposure:
        include: health
        exclude: "*"
lostark:
  auction:
    api:
      key: ${AUCTION_API_KEY:must_not_null_auction_apikey}
  market:
    api:
      key: ${MARKET_API_KEY:must_not_null_market_apikey}
webhook:
  url:
    discord: ${DISCORD_WEBHOOK_URL:must_not_null_url}


--- # security
spring:
  config:
    activate:
      on-profile: security
  security:
    oauth2:
      client:
        registration:
          discord:
            client-id: ${DISCORD_CLIENT_ID}
            client-secret: ${DISCORD_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/discord"
            scope:
              - identify
              - email
        provider:
          discord:
            authorization-uri: https://discord.com/api/oauth2/authorize
            token-uri: https://discord.com/api/oauth2/token
            user-info-uri: https://discord.com/api/users/@me
            user-name-attribute: id
secret:
    jwt:
      secret: ${JWT_SECRET:dVyUSSGqhfyWt5d23IZ1gS0P0OkjgZl03t20V32jfsjg}
      expiration: 604800000 # 7days
frontend:
  domain: ${FRONTEND_DOMAIN:http//localhost:5173}
--- # local-server
spring:
  config:
    activate:
      on-profile: server-local
  devtools:
    livereload:
      enabled: true
    restart:
      enabled: true
server:
  port: 8080
--- # prod-server
spring:
  config:
    activate:
      on-profile: server-prod
  lifecycle:
    timeout-per-shutdown-phase: 30s
server:
  shutdown: graceful
---
spring:
  config:
    activate:
      on-profile: persistence-common
  jpa:
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
--- # persistence-local
spring:
  config:
    activate:
      on-profile: persistence-local
  jpa:
    generate-ddl: true
    hibernate:
          ddl-auto: create-drop
  #    generate-ddl: false
  flyway:
    enabled: true # 명시적 선언
    baseline-on-migrate: true # springboot 2 이상에서 안되는 문제가 있어. 명시적 선언
    locations: classpath:db/migration
    baseline-version: 1
  #    locations: classpath:db/migration,classpath:db/seed
  datasource:
    url: jdbc:h2:mem:local;MODE=PostgreSQL
    username: sa
    password:
  h2:
    console:
      enabled: true
      path: /h2-console
--- # persistence-prod
spring:
  config:
    activate:
      on-profile: persistence-prod
  jpa:
    hibernate:
      ddl-auto: validate
    generate-ddl: false
  flyway:
    enabled: true # 명시적 선언
    baseline-on-migrate: true # springboot 2 이상에서 안되는 문제가 있어. 명시적 선언
    locations: classpath:db/migration
    baseline-version: 1
  datasource:
    url: ${DB_CONNECTION_URL}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
decorator:
  datasource:
    p6spy:
      enable-logging: false
---
spring:
  config:
    activate:
      on-profile: database-h2

---
spring:
  config:
    activate:
      on-profile: database-redis-local
redis:
    host: localhost
    port: 6379
--- # db-prod-mongodb
spring:
  config:
    activate:
      on-profile: database-redis-server
redis:
  host: ${DB_REDIS_HOST}
  port: ${DB_REDIS_PORT}
  password: ${DB_REDIS_PASSWORD}