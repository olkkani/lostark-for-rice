name: CI/CD Pipeline
on:
  push:
    branches:
      - release
  pull_request:
    branches:
      - release

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}:${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: release

      - name: setup jdk21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Check disk usage
        run: df -h

      - name: Build with Gradle
        run: ./gradlew build

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.OLKK_GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}
  deploy:
    runs-on: ubuntu-24.04
    needs: build
    env:
      HOST: ${{ secrets.HOST }}
      PORT_BLUE: ${{ secrets.PORT_BLUE }}
      PORT_GREEN: ${{ secrets.PORT_GREEN }}
      WORK_SPACE: "/home/${{ secrets.USERNAME }}/lfr/back/"
    steps:
      - name: serve-config
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            mkdir -p ${{ env.WORK_SPACE }} && cd ${{ env.WORK_SPACE }}
            rm -f .env
            
            echo "DB_MONGO_URL=${{ secrets.DB_MONGO_URL }}" >> .env
            echo "DB_CONNECTION_URL=${{ secrets.DB_CONNECTION_URL }}" >> .env
            echo "DB_USER=${{ secrets.DB_USER }}" >> .env
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
            echo "API_KEY=${{ secrets.API_KEY }}" >> .env 
            echo "IMAGE_NAME=${{ env.IMAGE_NAME }}" >> .env 

      - name: Copy docker-compose.yml to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          source: "./docker-compose.yml"
          target: ${{ env.WORK_SPACE }}
          debug: true

      - name: Deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd ${{ env.WORK_SPACE}}
            
            # 기존 서비스 종료
            docker compose stop blue 
            docker compose rm blue
            
            # 새 서비스 실행
            docker compose pull blue
            docker compose up -d blue
            
            # 사용하지 않는 이미지 삭제
            docker image prune -f