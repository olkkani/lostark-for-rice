name: CI/CD Pipeline
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}:${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: setup jdk21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.OLKK_GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      HOST: ${{ secrets.HOST }}
      PORT_BLUE: ${{ secrets.PORT_BLUE }}
      PORT_GREEN: ${{ secrets.PORT_GREEN }}
    steps:
      - name: Deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            APP_NAME="lfr"
            NEW_ENV="test-1201-1"
            
            # 1. 최신 Docker 이미지 가져오기
            docker pull ${{ env.IMAGE_NAME }}

            # 2. 새로운 컨테이너 실행
            docker run -d -p 18082:8080 --name $APP_NAME-$NEW_ENV  \
            --network olkkani_network \
            -e TZ=Asia/Seoul \
            -e SPRING_PROFILES_ACTIVE=prod \
            -e DB_CONNECTION_URL=${{ secrets.DB_CONNECTION_URL }} \
            -e DB_USER=${{ secrets.DB_USER }} \
            -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -e API_KEY=${{ secrets.API_KEY }} \
            ${{ env.IMAGE_NAME }}
            
